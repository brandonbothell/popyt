"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[897],{7485:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>m});var i=o(6687);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,i)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,i,n=function(e,t){if(null==e)return{};var o,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)o=a[i],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)o=a[i],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=i.createContext({}),c=function(e){var t=i.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},u=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(o),d=n,m=p["".concat(s,".").concat(d)]||p[d]||y[d]||a;return o?i.createElement(m,r(r({ref:t},u),{},{components:o})):i.createElement(m,r({ref:t},u))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,r=new Array(a);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:n,r[1]=l;for(var c=2;c<a;c++)r[c]=o[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,o)}d.displayName="MDXCreateElement"},4472:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>y,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=o(9501),n=(o(6687),o(7485));const a={sidebar_position:1},r="Working with Playlists",l={unversionedId:"tutorial/tutorial-basics/working-with-playlists",id:"tutorial/tutorial-basics/working-with-playlists",title:"Working with Playlists",description:"Playlists are lists of videos and a some metadata including a title, description, etc. They have some unique behaviors, especially pertaining to the completeness of videos fetched from these objects.",source:"@site/docs/tutorial/tutorial-basics/working-with-playlists.md",sourceDirName:"tutorial/tutorial-basics",slug:"/tutorial/tutorial-basics/working-with-playlists",permalink:"/popyt/docs/tutorial/tutorial-basics/working-with-playlists",draft:!1,editUrl:"https://github.com/brandonbothell/popyt/tree/master/docusaurus/templates/shared/docs/tutorial/tutorial-basics/working-with-playlists.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial - Basics",permalink:"/popyt/docs/category/tutorial---basics"},next:{title:"Congratulations!",permalink:"/popyt/docs/tutorial/tutorial-basics/congratulations"}},s={},c=[{value:"Initialize your YouTube object",id:"initialize-your-youtube-object",level:2},{value:"Fetch your first playlist",id:"fetch-your-first-playlist",level:2},{value:"Fetch a playlist&#39;s videos",id:"fetch-a-playlists-videos",level:2}],u={toc:c},p="wrapper";function y(e){let{components:t,...o}=e;return(0,n.kt)(p,(0,i.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"working-with-playlists"},"Working with Playlists"),(0,n.kt)("p",null,"Playlists are lists of videos and a some metadata including a title, description, etc. They have some unique behaviors, especially pertaining to the completeness of videos fetched from these objects."),(0,n.kt)("h2",{id:"initialize-your-youtube-object"},"Initialize your YouTube object"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const { YouTube } = require('popyt')\nconst youtube = new YouTube('api_key')\n")),(0,n.kt)("admonition",{title:"TAKE CARE",type:"danger"},(0,n.kt)("p",{parentName:"admonition"},"It is not recommended to place an API key directly in your code. Instead, use an environment variable.")),(0,n.kt)("h2",{id:"fetch-your-first-playlist"},"Fetch your first playlist"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const playlistById = youtube.getPlaylist('PLOnQsl0GcqfbrO4-KsJQp7ecp5T16frBI')\nconst playlistByUrl = youtube.getPlaylist('https://www.youtube.com/watch?v=AyOqGRjVtls&list=PLOnQsl0GcqfbrO4-KsJQp7ecp5T16frBI')\nconst playlistByTitleSearch = youtube.getPlaylist('Never Gonna Give You Up Parodies')\n\nconsole.log(`Playlist title: ${playlistById.title}`)\nconsole.log(`Playlist length: ${playlistById.length} videos`)\n")),(0,n.kt)("admonition",{title:"CHILD OBJECTS MUST BE FETCHED EXPLICITLY",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"To save your quota, Popyt doesn't fetch child objects of classes automatically. Instead, you can fetch them as you need them using convienent methods right on the class objects, or with the main YouTube class methods.")),(0,n.kt)("h2",{id:"fetch-a-playlists-videos"},"Fetch a playlist's videos"),(0,n.kt)("admonition",{title:"VALUES AREN'T GUARANTEED",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Playlists are unique because they contain ",(0,n.kt)("a",{parentName:"p",href:"https://developers.google.com/youtube/v3/docs/playlistItems"},"playlist items")," rather than videos.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const videos = await playlist.fetchVideos() // or use .then()\n\nconsole.log(`Title of first video: ${playlist.videos[0].title}`) // available through the original object\nconsole.log(`Title of last video: ${videos[videos.length - 1].title}`) // or from the return value of the method\n")),(0,n.kt)("p",null,"Playlist items contain less information than videos, but since they are similar, these types have been merged in Popyt. Search results have similar behavior."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const video = playlist.videos[0]\n\nconsole.log(video.full) // false\nconsole.log(video.commentCount) // undefined\n\nawait video.fetch()\n\nconsole.log(video.full) // true\nconsole.log(video.commentCount) // the number of comments on the video\n")))}y.isMDXComponent=!0}}]);