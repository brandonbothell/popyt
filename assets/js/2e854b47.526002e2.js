"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[287],{7485:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(6687);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(r),y=a,m=p["".concat(u,".").concat(y)]||p[y]||d[y]||o;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=y;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},6367:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(9501),a=(r(6687),r(7485));const o={sidebar_position:1},i="Tutorial Intro",l={unversionedId:"tutorial/intro",id:"tutorial/intro",title:"Tutorial Intro",description:"Let's discover Popyt in less than 5 minutes.",source:"@site/docs/tutorial/intro.md",sourceDirName:"tutorial",slug:"/tutorial/intro",permalink:"/popyt/docs/tutorial/intro",draft:!1,editUrl:"https://github.com/brandonbothell/popyt/tree/master/docusaurus/templates/shared/docs/tutorial/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Tutorial - Basics",permalink:"/popyt/docs/category/tutorial---basics"}},u={},s=[{value:"Getting started",id:"getting-started",level:2},{value:"What you&#39;ll need",id:"what-youll-need",level:3},{value:"Retrieving public data",id:"retrieving-public-data",level:2},{value:"Retrieving private data",id:"retrieving-private-data",level:2}],c={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tutorial-intro"},"Tutorial Intro"),(0,a.kt)("p",null,"Let's discover ",(0,a.kt)("strong",{parentName:"p"},"Popyt in less than 5 minutes"),"."),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("p",null,"Get started by ",(0,a.kt)("strong",{parentName:"p"},"creating a new YouTube object"),"."),(0,a.kt)("h3",{id:"what-youll-need"},"What you'll need"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A ",(0,a.kt)("a",{parentName:"li",href:"https://developers.google.com/youtube/v3/getting-started"},"YouTube Data v3")," API key:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Complete steps 1-4 and copy your API key.")))),(0,a.kt)("h2",{id:"retrieving-public-data"},"Retrieving public data"),(0,a.kt)("p",null,"Retrieve public data from YouTube by directly using the YouTube class. Instantiate the class like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const { YouTube } = require('popyt')\nconst youtube = new YouTube('api_key')\n")),(0,a.kt)("admonition",{title:"TAKE CARE",type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"It is not recommended to place an API key directly in your code. Instead, use an environment variable.")),(0,a.kt)("p",null,"Here are a few examples of retrieving data, but check the documentation for everything else:"),(0,a.kt)("p",null,"Get a video by ID:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const video = await youtube.getVideo('dQw4w9WgXcQ')\nconsole.log(video.title)\n")),(0,a.kt)("p",null,"You can do the same thing with playlists, channels, and comments by replacing Video with any of them.  "),(0,a.kt)("p",null,"Get a video by URL:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const video = await youtube.getVideo('https://youtube.com/watch?v=dQw4w9WgXcQ')\nconsole.log(video.title)\n")),(0,a.kt)("p",null,"Get a video by title (or similar title):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const video = await youtube.getVideo('never gonna give you up')\nconsole.log(video.title)\n")),(0,a.kt)("p",null,"Search videos:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const videos = await youtube.searchVideos('never gonna give you up', 12)\nconsole.log(videos.map(v => v.title).join('\\n')) // array of 12 partial video objects\n")),(0,a.kt)("h2",{id:"retrieving-private-data"},"Retrieving private data"))}d.isMDXComponent=!0}}]);